name: Validate Agent PR

on:
  pull_request:
    paths:
      - 'agents/**.json'

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper diff
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v41
      with:
        files: |
          agents/**.json
        json: true
    
    - name: Validate changed agent files
      run: |
        echo "🔍 Validating agent submissions..."
        
        # Parse the JSON array of changed files
        changed_files='${{ steps.changed-files.outputs.all_changed_files }}'
        
        # Convert JSON array to space-separated list
        files=$(echo "$changed_files" | python -c "import sys, json; print(' '.join(json.load(sys.stdin)))")
        
        if [ -z "$files" ]; then
          echo "No agent files changed"
          exit 0
        fi
        
        validation_failed=false
        
        for file in $files; do
          echo ""
          echo "Validating: $file"
          echo "----------------------------------------"
          
          if python scripts/validate_agent_v2.py "$file"; then
            echo "✅ $file passed validation"
          else
            echo "❌ $file failed validation"
            validation_failed=true
          fi
        done
        
        if [ "$validation_failed" = true ]; then
          echo ""
          echo "❌ One or more agent files failed validation"
          exit 1
        else
          echo ""
          echo "✅ All agent files passed validation!"
        fi
    
    - name: Comment PR - Success
      if: success()
      uses: actions/github-script@v7
      with:
        script: |
          const body = `## ✅ Agent Validation Successful
          
          All submitted agent files have passed validation:
          - ✓ JSON schema validation
          - ✓ Required fields present
          - ✓ Format requirements met
          
          Your submission will be reviewed by a maintainer.`;
          
          // Find and update or create comment
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('Agent Validation')
          );
          
          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: body
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
          }
    
    - name: Comment PR - Failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const body = `## ❌ Agent Validation Failed
          
          Your agent submission has validation errors. Please review the workflow logs for details.
          
          Common issues:
          - Invalid JSON syntax
          - Missing required fields (name, description, author, wellKnownURI, skills)
          - Invalid URL format for wellKnownURI
          - Skills must have id, name, and description
          
          Please fix the issues and update your pull request.`;
          
          // Find and update or create comment
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('Agent Validation')
          );
          
          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: body
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
          }